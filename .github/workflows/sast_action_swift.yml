name: SAST - SonarCloud (Action)

on:
  workflow_call:
    secrets:
      GH_TOKEN:
        required: false
      SONAR_TOKEN:
        required: true
      DOJO_TOKEN: 
        required: false
      DOJO_URL: 
        required: false

jobs:

  check_secret:
    name: Check secret presence
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [[ -z "$SONAR_TOKEN" ]]; then
            echo "SONAR_TOKEN missing"; exit 1
          else
            echo "Secret exists. The workflow will continue"
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  coverage:
    name: Build & Coverage
    runs-on: macos-14
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1'

      - uses: actions/checkout@v4

      # Run Fastlane lane (project handles scheme/package internally)
      - name: Run Fastlane code_coverage
        run: fastlane code_coverage
        env:
          CI: true

      # Convert xcresult -> Sonar XML
      - name: Convert coverage to Sonar XML
        run: |
          mkdir -p sonar-reports
          bash ci-scripts/xccov-to-sonarqube-generic.sh xcov_output/*.xcresult > sonar-reports/coverage.xml

      # Upload XML to be used in SonarCloud analysis
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: sonar-reports/coverage.xml

  SAST:
    name: SAST - SonarCloud analysis
    needs: [check_secret, coverage]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Download coverage report from previous job
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: sonar-reports

      # Setup project key
      - name: Setup project key
        run: echo "PROJECTKEY=${{ github.repository_owner}}_$(echo ${{ github.repository }} | sed 's/.*\///')" >> $GITHUB_ENV

      # Run SonarCloud analysis (with coverage XML)
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.organization=${{ github.repository_owner }}
            -Dsonar.projectKey=${{ env.PROJECTKEY }}
            -Dsonar.swift.coverage.reportPaths=sonar-reports/coverage.xml
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
