name: SAST - SonarCloud (BT)
on:
  workflow_call:
    secrets:
      GH_TOKEN:
        required: false
      SONAR_TOKEN:
        required: true
jobs:
  check_secret:
    name: Check secret presence
    runs-on: ubuntu-latest
    steps:
    - run: if [[ -z "$SONAR_TOKEN" ]]; then exit 1; else echo "Secret exists. The workflow will be continued"; fi
    env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  SAST:
    name: SAST - SonarCloud Analysis (BT)
    needs: check_secret
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #Shallow clones should be disabled for a better relevancy of SonarCloud analysis
         #ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup projectkey
        run: echo "PROJECTKEY=${{ github.repository_owner}}_$(echo ${{ github.repository }} | sed 's/.*\///')" >> $GITHUB_ENV
      - name: SonarCloud Scan - Gradle Wrapper - Push or Workflow Dispatch Analysis
        if: (github.event_name == 'push'|| github.event_name == 'workflow_dispatch')
        uses: gradle/gradle-build-action@v2.11.1
        with:
          gradle-version: wrapper
          arguments: test jacocoTestReport sonar --info --full-stacktrace -Dsonar.organization=${{ github.repository_owner }} -Dsonar.projectKey=${{ env.PROJECTKEY }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          CI: true
      - name: SonarCloud Scan - Gradle Wrapper - Pull Request Analysis
        if: (github.event_name == 'pull_request_target')
        uses: gradle/gradle-build-action@v2.11.1
        with:
          gradle-version: wrapper
          arguments: sonar --info --full-stacktrace -Dsonar.organization=${{ github.repository_owner }} -Dsonar.projectKey=${{ env.PROJECTKEY }} -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }} -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          CI: true
